<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easyshare.dao.PostDao">
    <resultMap id="postVoMap" type="PostVo">
        <id property="id" column="id"/>
        <result property="content" column="content"/>
        <result property="authorId" column="author_id"/>
        <result property="author" column="username"/>
        <result property="avatar" column="avatar"/>
        <result property="publishAt" column="publish_at"/>
        <result property="viewsCnt" column="views_cnt"/>
        <result property="likesCnt" column="likes_cnt"/>
        <result property="commentsCnt" column="comments_cnt"/>
        <result property="lastUpdate" column="last_update"/>
    </resultMap>

    <insert id="addPost" parameterType="Post" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `tb_post` (content, author_id, publish_at, last_update)
        VALUES (#{content}, #{authorId}, #{publishAt}, #{lastUpdate})
    </insert>

    <select id="findOnePost" resultMap="postVoMap">
        SELECT p.id          id,
               content,
               author_id,
               username,
               avatar,
               publish_at,
               views_cnt,
               likes_cnt,
               comments_cnt,
               p.last_update last_update
        FROM `tb_post` p,
             `tb_user` u
        WHERE p.is_deleted = 0
          AND author_id = u.id
          AND p.id = #{postId}
    </select>

    <select id="findPosts" resultMap="postVoMap">
        SELECT p.id id,
        content,
        author_id,
        username,
        avatar,
        publish_at,
        views_cnt,
        likes_cnt,
        comments_cnt,
        p.last_update last_update
        FROM `tb_post` p,
        `tb_user` u
        WHERE p.is_deleted = 0
        AND author_id = u.id
        <if test="authorId != null">
            AND author_id = #{authorId}
        </if>
        <if test="keywords != null">
            AND (
            content LIKE CONCAT('%', REPLACE(#{keywords}, ' ', '%'), '%')
            OR username LIKE CONCAT('%', REPLACE(#{keywords}, ' ', '%'), '%')
            )
        </if>
        <if test="lastId != null">
            AND p.id &lt; #{lastId}
        </if>
        ORDER BY publish_at DESC, id DESC
        <if test="pageSize != null">
            LIMIT #{pageSize}
        </if>
    </select>

    <select id="getHotPostsAtRandom" resultMap="postVoMap">
        SELECT p.id          id,
               content,
               author_id,
               username,
               avatar,
               publish_at,
               views_cnt,
               likes_cnt,
               comments_cnt,
               p.last_update last_update
        FROM `tb_post` p,
             `tb_user` u
        WHERE p.is_deleted = 0
          AND author_id = u.id
          <!-- AND p.last_update BETWEEN DATE_SUB(NOW(), INTERVAL #{dateLimit} DAY) AND NOW() -->
        ORDER BY RAND()
            LIMIT #{pageSize}
    </select>

    <update id="updatePostContent">
        UPDATE `tb_post`
        SET content     = #{content},
            last_update = #{lastUpdate}
        WHERE is_deleted = 0
          AND id = #{postId}
    </update>

    <update id="incrementCommentsCnt">
        UPDATE `tb_post`
        SET comments_cnt = comments_cnt + 1
        WHERE is_deleted = 0
          AND id = #{postId}
    </update>

    <update id="decrementCommentsCnt">
        UPDATE `tb_post`
        SET comments_cnt = comments_cnt - 1
        WHERE is_deleted = 0
          AND id = #{postId}
    </update>

    <update id="incrementLikesCnt">
        UPDATE `tb_post`
        SET likes_cnt = likes_cnt + 1
        WHERE is_deleted = 0
          AND id = #{postId}
    </update>

    <update id="decrementLikesCnt">
        UPDATE `tb_post`
        SET likes_cnt = likes_cnt - 1
        WHERE is_deleted = 0
          AND id = #{postId}
    </update>

    <update id="incrementViewsCnt">
        UPDATE `tb_post`
        SET views_cnt = views_cnt + 1
        WHERE is_deleted = 0
          AND id = #{postId}
    </update>

    <update id="deletePost">
        UPDATE `tb_post`
        SET is_deleted  = 1,
            last_update = #{lastUpdate}
        WHERE is_deleted = 0
          AND id = #{postId}
    </update>
</mapper>