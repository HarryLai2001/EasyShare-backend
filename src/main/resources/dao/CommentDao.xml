<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easyshare.dao.CommentDao">
    <resultMap id="commentVoMap" type="CommentVo">
        <id property="id" column="id" />
        <result property="postId" column="post_id" />
        <result property="fromUserId" column="from_user_id" />
        <result property="fromUsername" column="from_username" />
        <result property="fromUserAvatar" column="from_user_avatar" />
        <result property="content" column="content" />
        <result property="commentAt" column="comment_at" />
        <result property="parentId" column="parent_id" />
        <result property="toUserId" column="to_user_id" />
        <result property="toUsername" column="to_username" />
        <result property="toUserAvatar" column="to_user_avatar" />
        <result property="isDeleted" column="is_deleted" />
    </resultMap>

    <resultMap id="hieraCommentVoMap" type="CommentVo">
        <id property="id" column="id" />
        <result property="postId" column="post_id" />
        <result property="fromUserId" column="from_user_id" />
        <result property="fromUsername" column="from_username" />
        <result property="fromUserAvatar" column="from_user_avatar" />
        <result property="content" column="content" />
        <result property="commentAt" column="comment_at" />
        <result property="isDeleted" column="is_deleted" />
        <collection property="childComments" ofType="CommentVo" resultMap="commentVoMap" columnPrefix="child_" />
    </resultMap>

    <insert id="addComment" parameterType="Comment" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `tb_comment` (post_id, from_user_id, content, comment_at, parent_id, to_user_id)
        VALUES (#{postId}, #{fromUserId}, #{content}, #{commentAt}, #{parentId}, #{toUserId})
    </insert>

    <select id="findOneComment" resultMap="commentVoMap">
        SELECT c.id                                  id,
               post_id,
               from_user_id,
               fu.username                           from_username,
               fu.avatar                             from_user_avatar,
               IF(c.is_deleted = 1, NULL, c.content) content,
               comment_at,
               parent_id,
               to_user_id,
               tu.username                           to_username,
               tu.avatar                             to_user_avatar,
               c.is_deleted                          is_deleted
        FROM `tb_comment` c
                 LEFT JOIN `tb_user` fu ON c.from_user_id = fu.id
                 LEFT JOIN `tb_user` tu ON c.to_user_id = tu.id
        WHERE c.id = #{commentId}
    </select>

    <select id="findCommentsOfOnePost" resultMap="hieraCommentVoMap">
        SELECT p.id                                  id,
               p.post_id                             post_id,
               p.from_user_id                        from_user_id,
               pu.username                           from_username,
               pu.avatar                             from_user_avatar,
               IF(p.is_deleted = 1, NULL, p.content) content,
               p.comment_at                          comment_at,
               p.is_deleted                          is_deleted,
               c.id                                  child_id,
               c.post_id                             child_post_id,
               c.from_user_id                        child_from_user_id,
               cfu.username                          child_from_username,
               cfu.avatar                            child_from_user_avatar,
               IF(c.is_deleted = 1, NULL, c.content) child_content,
               c.comment_at                          child_comment_at,
               c.parent_id                           child_parent_id,
               c.to_user_id                          child_to_user_id,
               ctu.username                          child_to_username,
               ctu.avatar                            child_to_user_avatar,
               c.is_deleted                          child_is_deleted
        FROM `tb_comment` p
                 LEFT JOIN `tb_comment` c ON p.id = c.parent_id
                 LEFT JOIN `tb_user` pu ON p.from_user_id = pu.id
                 LEFT JOIN `tb_user` cfu ON c.from_user_id = cfu.id
                 LEFT JOIN `tb_user` ctu ON c.to_user_id = ctu.id
        WHERE p.post_id = #{postId}
          AND p.parent_id IS NULL
        ORDER BY p.id DESC, c.id
    </select>

    <update id="deleteComment">
        UPDATE `tb_comment`
        SET is_deleted = 1
        WHERE is_deleted = 0
          AND id = #{commentId}
    </update>
</mapper>